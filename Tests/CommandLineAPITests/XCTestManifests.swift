#if !canImport(ObjectiveC)
import XCTest

extension ArgumentsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ArgumentsTests = [
        ("testArguments", testArguments),
    ]
}

extension AskTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AskTests = [
        ("testAsk_confirmation", testAsk_confirmation),
        ("testAsk_customConfirmation", testAsk_customConfirmation),
        ("testAsk_default", testAsk_default),
        ("testAsk_defaultAndConfirm", testAsk_defaultAndConfirm),
        ("testAsk_Int", testAsk_Int),
        ("testAsk_invalidBoolType", testAsk_invalidBoolType),
        ("testAsk_invalidType", testAsk_invalidType),
        ("testAsk_notEmptyValidator", testAsk_notEmptyValidator),
        ("testAsk_rangeValidator", testAsk_rangeValidator),
        ("testAsk_simple", testAsk_simple),
        ("testAsk_validators", testAsk_validators),
        ("testPrintln", testPrintln),
    ]
}

extension AttributesTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AttributesTests = [
        ("testAttributes", testAttributes),
        ("testDates", testDates),
        ("testModifyAttributes_macOS", testModifyAttributes_macOS),
        ("testModifyAttributes", testModifyAttributes),
        ("testType", testType),
    ]
}

extension ChooseTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ChooseTests = [
        ("testChoose", testChoose),
        ("testChoose_badInput", testChoose_badInput),
        ("testChoose_map", testChoose_map),
        ("testChoose_noChoices", testChoose_noChoices),
    ]
}

extension EnvTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__EnvTests = [
        ("testEnv_get", testEnv_get),
        ("testEnv_set", testEnv_set),
    ]
}

extension FileManagementTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FileManagementTests = [
        ("testCopy_directory", testCopy_directory),
        ("testCopy_directoryToDirectory", testCopy_directoryToDirectory),
        ("testCopy_directoryToFileExist", testCopy_directoryToFileExist),
        ("testCopy_file", testCopy_file),
        ("testCopy_fileToDirectory", testCopy_fileToDirectory),
        ("testCopy_fileToFileExist", testCopy_fileToFileExist),
        ("testCreateDirectory", testCreateDirectory),
        ("testDelete", testDelete),
        ("testExist", testExist),
        ("testMove_directory", testMove_directory),
        ("testMove_directoryToDirectory", testMove_directoryToDirectory),
        ("testMove_directoryToFileExist", testMove_directoryToFileExist),
        ("testMove_file", testMove_file),
        ("testMove_fileToDirectory", testMove_fileToDirectory),
        ("testMove_fileToFileExist", testMove_fileToFileExist),
        ("testRename", testRename),
        ("testTouch_name", testTouch_name),
    ]
}

extension FilesystemRepresentationTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FilesystemRepresentationTests = [
        ("testAppending", testAppending),
        ("testBasename", testBasename),
        ("testBasenameWithoutExtension", testBasenameWithoutExtension),
        ("testChildren", testChildren),
        ("testExtension", testExtension),
        ("testParent", testParent),
        ("testPathComponents", testPathComponents),
        ("testRelativePath", testRelativePath),
    ]
}

extension IOTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__IOTests = [
        ("testData", testData),
        ("testText", testText),
    ]
}

extension PathInitTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PathInitTests = [
        ("testCommonPaths", testCommonPaths),
        ("testInit_failes", testInit_failes),
        ("testInit_relative", testInit_relative),
        ("testInit_url", testInit_url),
        ("testInit", testInit),
    ]
}

extension PathOtherTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PathOtherTests = [
        ("testBundle", testBundle),
        ("testCodable", testCodable),
        ("testComparable", testComparable),
        ("testDecodable", testDecodable),
        ("testEncodable", testEncodable),
        ("testEqualAndHash", testEqualAndHash),
        ("testErrorDecriptions", testErrorDecriptions),
    ]
}

extension PermissionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PermissionsTests = [
        ("testPermissions", testPermissions),
    ]
}

extension RunTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__RunTests = [
        ("testCurrentTaskRun", testCurrentTaskRun),
        ("testCWD", testCWD),
        ("testDummyExecutor", testDummyExecutor),
        ("testEnv", testEnv),
        ("testProcess_env", testProcess_env),
        ("testRun_pipe", testRun_pipe),
        ("testRun_pipeFail", testRun_pipeFail),
        ("testRun_pipeInString", testRun_pipeInString),
        ("testRunVarargs", testRunVarargs),
    ]
}

extension StringStyleTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StringStyleTests = [
        ("testArrayStyles", testArrayStyles),
        ("testBright", testBright),
        ("testCustomColor", testCustomColor),
        ("testDisableStyles", testDisableStyles),
        ("testEnrich", testEnrich),
        ("testInterpolation", testInterpolation),
        ("testStringProtocolStyled", testStringProtocolStyled),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(ArgumentsTests.__allTests__ArgumentsTests),
        testCase(AskTests.__allTests__AskTests),
        testCase(AttributesTests.__allTests__AttributesTests),
        testCase(ChooseTests.__allTests__ChooseTests),
        testCase(EnvTests.__allTests__EnvTests),
        testCase(FileManagementTests.__allTests__FileManagementTests),
        testCase(FilesystemRepresentationTests.__allTests__FilesystemRepresentationTests),
        testCase(IOTests.__allTests__IOTests),
        testCase(PathInitTests.__allTests__PathInitTests),
        testCase(PathOtherTests.__allTests__PathOtherTests),
        testCase(PermissionsTests.__allTests__PermissionsTests),
        testCase(RunTests.__allTests__RunTests),
        testCase(StringStyleTests.__allTests__StringStyleTests),
    ]
}
#endif
